Already up to date.
/fsx-storygen/beidic/anaconda3/envs/griffin/bin/python
/fsx-storygen/beidic/anaconda3/envs/griffin/bin/python
The token has not been saved to the git credentials helper. Pass `add_to_git_credential=True` in this function directly or `--add-to-git-credential` if using via `huggingface-cli` if you want to set the git credential as well.
Token is valid (permission: fineGrained).
Your token has been saved to /data/home/beidic/.cache/huggingface/token
Login successful
NCCL_TIMEOUT 1800
NCCL_TIMEOUT 1800
NCCL_TIMEOUT 1800
NCCL_TIMEOUT 1800
NCCL_TIMEOUT 1800
NCCL_TIMEOUT 1800
NCCL_TIMEOUT 1800
NCCL_TIMEOUT 1800
is_distributed True
Namespace(tasks='strategyqa', model='meta-llama/Meta-Llama-3-8B-Instruct', device=None, limit=None, griffin=True, cats=False, check=True, kernel_size=10, spr=0.4, thr=0.005, widthtree=1, patternstrict=False, shotfive=True, shottwo=False, filteractiveenabled=False)
We now use eos_token as pad token
is_distributed True
Namespace(tasks='strategyqa', model='meta-llama/Meta-Llama-3-8B-Instruct', device=None, limit=None, griffin=True, cats=False, check=True, kernel_size=10, spr=0.4, thr=0.005, widthtree=1, patternstrict=False, shotfive=True, shottwo=False, filteractiveenabled=False)
is_distributed True
Namespace(tasks='strategyqa', model='meta-llama/Meta-Llama-3-8B-Instruct', device=None, limit=None, griffin=True, cats=False, check=True, kernel_size=10, spr=0.4, thr=0.005, widthtree=1, patternstrict=False, shotfive=True, shottwo=False, filteractiveenabled=False)
is_distributed True
Namespace(tasks='strategyqa', model='meta-llama/Meta-Llama-3-8B-Instruct', device=None, limit=None, griffin=True, cats=False, check=True, kernel_size=10, spr=0.4, thr=0.005, widthtree=1, patternstrict=False, shotfive=True, shottwo=False, filteractiveenabled=False)
is_distributed True
Namespace(tasks='strategyqa', model='meta-llama/Meta-Llama-3-8B-Instruct', device=None, limit=None, griffin=True, cats=False, check=True, kernel_size=10, spr=0.4, thr=0.005, widthtree=1, patternstrict=False, shotfive=True, shottwo=False, filteractiveenabled=False)
is_distributed True
Namespace(tasks='strategyqa', model='meta-llama/Meta-Llama-3-8B-Instruct', device=None, limit=None, griffin=True, cats=False, check=True, kernel_size=10, spr=0.4, thr=0.005, widthtree=1, patternstrict=False, shotfive=True, shottwo=False, filteractiveenabled=False)
is_distributed True
Namespace(tasks='strategyqa', model='meta-llama/Meta-Llama-3-8B-Instruct', device=None, limit=None, griffin=True, cats=False, check=True, kernel_size=10, spr=0.4, thr=0.005, widthtree=1, patternstrict=False, shotfive=True, shottwo=False, filteractiveenabled=False)
is_distributed True
Namespace(tasks='strategyqa', model='meta-llama/Meta-Llama-3-8B-Instruct', device=None, limit=None, griffin=True, cats=False, check=True, kernel_size=10, spr=0.4, thr=0.005, widthtree=1, patternstrict=False, shotfive=True, shottwo=False, filteractiveenabled=False)
We now use eos_token as pad token
We now use eos_token as pad token
We now use eos_token as pad token
beam width is 8
We now use eos_token as pad token
We now use eos_token as pad token
We now use eos_token as pad token
beam width is 8
We now use eos_token as pad token
beam width is 8
beam width is 8
beam width is 8
beam width is 8
beam width is 8
beam width is 8
tasks ['strategyqa']
tasks ['strategyqa']
tasks ['strategyqa']tasks ['strategyqa']tasks ['strategyqa']

tasks ['strategyqa']tasks ['strategyqa']tasks ['strategyqa']



beamwidth is 1beamwidth is 1

beamwidth is 1
beamwidth is 1
beamwidth is 1
beamwidth is 1
beamwidth is 1
beamwidth is 1
Answer no expected no
Answer no expected no
Answer no expected no
Answer yes expected yes
Answer no expected no
Answer no expected no
Answer no expected yes
Skipping the batch
Answer yes expected yes
Answer no expected yes
Answer no expected no
Answer no expected no
Answer no expected no
Answer no expected yes
Answer no expected yes
Skipping the batch
Answer yes expected yes
Answer yes expected yes
Answer yes expected no
Answer no expected no
Answer no expected no
Answer no expected no
Answer no expected no
Answer no expected no
Answer no expected no
Answer no expected yes
Answer no expected no
Skipping the batch
Answer no expected no
Answer no expected no
Skipping the batch
Answer yes expected yes
Answer 0 megabytes. netflix shows are typically 10-15 minutes per episode. 10 hours of netflix shows is 600-900 episodes. 1 episode is 1-2 megabytes. 600-900 episodes is 600-900 megabytes. 500gb is 500,000 megabytes. 500,000 megabytes is 500 times 1000 megabytes. 1000 megabytes is 1 gigabyte. 1 gigabyte is 1000 megabytes. 500,000 megabytes is 500 times 1000 megabytes. 1000 megabytes is 1 gigabyte. 1 gigabyte is 1000 megabytes. 500,000 megabytes is 500 times 1000 megabytes. 1000 megabytes is 1 gigabyte. 1 gigabyte is 1000 megabytes. 500,000 megabytes is 500 times 1000 megabytes. 1000 megabytes is 1 gigabyte. 1 gigabyte is 1000 megabytes. 500,000 megabytes is 500 times 1000 megabytes. 1000 megabytes is 1 gigabyte. 1 gigabyte is 1000 megabytes. 500,00 expected no
Answer  not part of the felis catus family. they are part of the family chinchillidae. they are not part of the felidae family. they are not part of the felis genus. they are not part of the felis species. they are not part of the felis genus. they are not part of the felis species. they are not part of the felis genus. they are not part of the felis species. they are not part of the felis genus. they are not part of the felis species. they are not part of the felis genus. they are not part of the felis species. they are not part of the felis genus. they are not part of the felis species. they are not part of the felis genus. they are not part of the felis species. they are not part of the felis genus. they are not part of the felis species. they are not part of the felis genus. they are not part of the felis species. they are not part of the felis genus. they are not part of the felis species. they are not part of the felis genus. they are not part of the felis species. they are not part of the feli expected no
Skipping the batch
Answer yes expected no
Answer no expected no
Skipping the batch
Answer no expected yes
Answer no expected no
Answer yes expected no
Answer yes expected yes
Answer no expected no
Answer no expected no
Answer no expected no
Answer yes expected yes
Skipping the batch
Answer no expected yes
Answer no expected no
Answer no expected no
Answer no expected no
Answer yes expected yes
Answer no expected no
Answer no expected no
Answer no expected no
Answer no expected no
Answer yes expected yes
Answer yes expected yes
Answer yes expected yes
Answer no expected no
Answer yes expected yes
Answer yes expected yes
Answer yes expected no
Answer no expected no
index 0 start communication
index 1 start communication
index 6 start communication
index 2 start communication
index 7 start communication
index 3 start communication
index 4 start communication
index 5 start communication
Here are the statistics for inference
Here are the statistics for inference
Here are the statistics for inferenceHere are the statistics for inference

Here are the statistics for inference
Here are the statistics for inference
Here are the statistics for inference
Here are the statistics for inference
+------------+----------------+---------------------------+-----------------------------+---------------+-------------+---------+--------------------------------+------------------+----------------------------------+-----------------------+----------------------+
| Task       |   Num Sentence |   Total Generation Length |   Average Generation Length |   Total Steps |   Num Steps |     AAL |   Total Roll Back Length Error |   Error Instance |   Average Roll Back Length Error |   Effective Tree Size |   Drafting Tree Size |
+============+================+===========================+=============================+===============+=============+=========+================================+==================+==================================+=======================+======================+
| strategyqa |            457 |                     22562 |                     49.3698 |         17538 |        2520 | 6.95952 |                           7662 |             1328 |                          5.76958 |                    10 |                    1 |
+------------+----------------+---------------------------+-----------------------------+---------------+-------------+---------+--------------------------------+------------------+----------------------------------+-----------------------+----------------------+
Namespace(tasks='strategyqa', model='meta-llama/Meta-Llama-3-8B-Instruct', device='cuda:0', limit=None, griffin=True, cats=False, check=True, kernel_size=10, spr=0.4, thr=0.005, widthtree=1, patternstrict=False, shotfive=True, shottwo=False, filteractiveenabled=False)
+------------+---------+-----------+--------------+
| Task       |   Total |   Correct |   Solve Rate |
+============+=========+===========+==============+
| strategyqa |     457 |       333 |     0.728665 |
+------------+---------+-----------+--------------+
